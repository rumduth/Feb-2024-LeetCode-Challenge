// 387. First Unique Character in a String
// Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

//C++
class Solution {
public:
    int firstUniqChar(string s) {
        unordered_map<char, int> m;
        for(auto& i : s)
            m[i]++;
        for(int i = 0; i < s.size(); i++)
            if(m[s[i]] == 1)
                return i;
        return -1;
    }
};

Time Complexity: O(N)
Space Complexity: O(N)

//Python 3
class Solution:
    def firstUniqChar(self, s: str) -> int:
        my_list = Counter(s)
        for i in range(len(s)):
            if my_list[s[i]] == 1:
                return i
        return -1
