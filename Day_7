# 451. Sort Characters By Frequency
# Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a character is the number of times it appears in the string.

# Return the sorted string. If there are multiple answers, return any of them.

#Python3
class Solution:
    def frequencySort(self, s: str) -> str:
        my_list = defaultdict(int)
        for c in s:
            my_list[c] += 1
        my_list = sorted(my_list.items(),key = lambda x : x[1], reverse = True)
        ans = ""
        for item in my_list:
            ans += item[0] * item[1]
        return ans
        
#C++
class Solution {
public:
    string frequencySort(string s) {
        unordered_map<char, int> m;
        for(int i = 0; i < s.size(); i++)
            m[s[i]]++;
        vector<pair<int, char>> v;
        for(auto& i: m)
            v.push_back({i.second,i.first});
        sort(v.begin(),v.end());
        reverse(v.begin(),v.end());
        string ans = "";
        for(int i = 0; i < v.size(); i++)
        {
            for(int j = 0; j < v[i].first ; j++)
                ans.push_back(v[i].second);
        }
        return ans;
    }
};

Time Complexity: O(NLogN)
Space Complexity: O(N)