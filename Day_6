49. Group Anagrams
Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

//C++
class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        vector<vector<string>> ans;
        unordered_map<string, vector<string>> m;
        for(auto& str: strs)
        {
            string a = str;
            sort(a.begin(),a.end());
            m[a].push_back(str);
        }
        for(auto& i : m)
            ans.push_back(i.second);
        return ans;
    }
};

Time Complexity: O(n*k*log(k))
Space Complexity: O(n*k)

class Solution:
    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:
        group = {}
        for s in strs:
            sorted_s = ''.join(sorted(s))
            if sorted_s not in group:
                group[sorted_s] = [s]
            else:
                group[sorted_s].append(s)
        return group.values()
        