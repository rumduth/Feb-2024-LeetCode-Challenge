169. Majority Element
Given an array nums of size n, return the majority element.

The majority element is the element that appears more than âŒŠn / 2âŒ‹ times. You may assume that the majority element always exists in the array.

Time Complexity: O(N)
Space Complexity: O(1)

//Python3
class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        n = len(nums)
        ans = 0
        cnt = 0
        for i in range(n):
            if cnt == 0:
                ans = nums[i]
                cnt += 1
            else:
                if nums[i] == ans:
                    cnt += 1
                else:
                    cnt -= 1
        return ans
        
//C++
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n = nums.size();
        int cnt = 0;
        int ans;
        for(int i = 0; i < n; i++)
        {
            if(cnt == 0)
            {
                ans = nums[i];
                cnt++;
            }
            else
            {
                if(nums[i] == ans)
                    cnt++;
                else
                    cnt--;
            }
        }
        return ans;
    }
};